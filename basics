 ✔️Print Odd Numbers from 1 to n
import java.util.Scanner;

public class PrintOddNumbers {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter n: ");
        int n = sc.nextInt();

        for (int i = 1; i <= n; i++) {
            if (i % 2 == 1) {
                System.out.println(i);
            }
        }

        sc.close();
    }
}

✔️ Sum of Numbers from 1 to n
import java.util.Scanner;

public class SumOfNumbers {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter n: ");
        int n = sc.nextInt();

        int sum = 0;
        for (int i = 1; i <= n; i++) {
            sum += i;
        }

        System.out.println("Sum = " + sum);

        sc.close();
    }
}

✔️ Sum of Even Numbers up to n
import java.util.Scanner;

public class SumOfEvenNumbers {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter n: ");
        int n = sc.nextInt();

        int sum = 0;
        for (int i = 2; i <= n; i += 2) {
            sum += i;
        }

        System.out.println("Sum of even numbers = " + sum);

        sc.close();
    }
}

✔️ Sum of Odd Numbers up to n
import java.util.Scanner;

public class SumOfOddNumbers {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter n: ");
        int n = sc.nextInt();

        int sum = 0;
        for (int i = 1; i <= n; i += 2) {
            sum += i;
        }

        System.out.println("Sum of odd numbers = " + sum);

        sc.close();
    }
}

✔️ FACTORIAL
int product = 1;   // start at 1, not 0
for (int i = 1; i <= n; i++) {
    product = product * i;   // multiply step by step
}

✔️ Prime number check
import java.util.Scanner;

public class PrimeCheck {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter a number: ");
        int n = sc.nextInt();

        boolean isPrime = true;

        if (n <= 1) {
            isPrime = false;  // 0 and 1 are not prime
        } else {
            for (int i = 2; i <= Math.sqrt(n); i++) //Because if n = a × b, then:at least one of a or b will be ≤ √n. 
                                                        Example: For n = 36, pairs are (2,18), (3,12), (6,6).
                                                        Once you reach 6 (which is √36), you’ve already found all factors.
{
                if (n % i == 0) {
                    isPrime = false;
                    break;
                }
            }
        }

        if (isPrime) {
            System.out.println(n + " is a prime number.");
        } else {
            System.out.println(n + " is not a prime number.");
        }


      sc.close();
    }
}


✔️ Palindrome (Numbers)
import java.util.Scanner;

public class PalindromeNumber {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int n = sc.nextInt();

        int original = n;
        int reversed = 0;

        while (n != 0) {
            int digit = n % 10;            // Get last digit
            reversed = reversed * 10 + digit; // Build reversed number
            n = n / 10;                    // Remove last digit
        }

        if (original == reversed) {
            System.out.println(original + " is a palindrome.");
        } else {
            System.out.println(original + " is not a palindrome.");
        }
    }
}

✔️ Palindrome for Strings
import java.util.Scanner;

public class PalindromeChecker {

    // Method to check if a string is a palindrome
    public boolean isPalindrome(String str) {
        int left = 0;
        int right = str.length() - 1;

        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false; // Not a palindrome
            }
            left++;
            right--;
        }
        return true; // It's a palindrome
    }

    // Main method
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = sc.nextLine();

        PalindromeChecker checker = new PalindromeChecker();

        if (checker.isPalindrome(str)) {
            System.out.println(str + " is a palindrome.");
        } else {
            System.out.println(str + " is not a palindrome.");
        }
    }
}


✔️Fibonacci
import java.util.Scanner;

public class FibonacciIterative {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter how many terms: ");
        int n = sc.nextInt();

        int a = 0, b = 1;

        System.out.print("Fibonacci Series: ");
        for (int i = 0; i < n; i++) {
            System.out.print(a + " ");  // Print current number
            int next = a + b;           // Calculate next number
            a = b;                      // Move forward
            b = next;                   // Move forward
        }
    }
}

✔️Swapping using temp
        int temp = a; // store a in temp
        a = b;        // assign b to a
        b = temp;     // assign temp (original a) to b


 ✔️ Swap without temp using arithmetic
        a = a + b;
        b = a - b;
        a = a - b;

✔️reversing a string
import java.util.Scanner;

public class ReverseString {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = sc.nextLine();

        String reversed = "";

        for (int i = str.length() - 1; i >= 0; i--) {
            reversed += str.charAt(i);  // add character from end
        }

        System.out.println("Reversed string: " + reversed);
    }
}
✔️revese string Using StringBuilder
import java.util.Scanner;

public class ReverseStringBuilder {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = sc.nextLine();

        StringBuilder sb = new StringBuilder(str);
        sb.reverse();

        System.out.println("Reversed string: " + sb.toString());
    }
}

✔️ Reverse an Array
import java.util.Scanner;

public class ReverseArray {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter array size: ");
        int n = sc.nextInt();

        int[] arr = new int[n];

        System.out.println("Enter array elements:");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        // Reverse array using for loop
        for (int i = 0, j = n - 1; i < j; i++, j--) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
        }

        System.out.println("Reversed array:");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
    }
}
reverse only a part of a string
import java.util.Scanner;

public class ReversePartString {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter a string: ");
        String str = sc.nextLine();

        System.out.print("Enter start index to reverse: ");
        int start = sc.nextInt();

        System.out.print("Enter end index to reverse: ");
        int end = sc.nextInt();

        // Extract parts
        String before = str.substring(0, start);
        String toReverse = str.substring(start, end + 1);
        String after = str.substring(end + 1);

        // Reverse the middle part
        String reversed = new StringBuilder(toReverse).reverse().toString();

        // Combine all parts
        String result = before + reversed + after;

        System.out.println("Modified string: " + result);
    }
}
